// Question : You are given a keypad (as shown in the diagram) and an array arr[ ] containing digits, your task is to list all possible words in any order which can be generated by pressing numbers in arr[] sequentially.

// Note: Number 0 and 1 do not map to any letters.
// You can return the words in any order, the driver code will print them in sorted order.



// Examples :

// Input: arr[] = [2, 3]
// Output: [ad, ae, af, bd, be, bf, cd, ce, cf]
// Explanation: When we press 2 and 3 total 3 x 3 = 9 possible words formed.
// Input: arr[] = [2]
// Output: [a, b, c]
// Explanation: When we press 2 total 3 possible words formed.
// Constraints:
// 1 ≤ arr.size() ≤ 9
// 0 ≤ arr[i] ≤ 9

#include <iostream>
#include <bits/stdc++.h>
using namespace std;

class Solution {
  public:
    void helper(int i, int n, vector<string> &mp, vector<int> &arr, string &tmp, 
    vector<string> &ans) {
        if(i == n) {
            ans.push_back(tmp);
            return;
        }
        if(mp[arr[i]] == "") {
            helper(i + 1, n, mp, arr, tmp, ans);
            return;
        }
        for(int k = 0; k < mp[arr[i]].length(); k++) {
            tmp += mp[arr[i]][k];
            helper(i + 1, n, mp, arr, tmp, ans);
            tmp = tmp.substr(0, tmp.size() - 1);
        }
    }
    vector<string> possibleWords(vector<int> &arr) {
        int n = arr.size();
        vector<string> mp(10), ans;
        mp = {"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
        string tmp = "";
        helper(0, n, mp, arr, tmp, ans);
        return ans;
    }
};